package com.service.banking.hibernateEntity;
// Generated Feb 20, 2020 6:19:12 PM by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.DynamicUpdate;

/**
 * Branches generated by hbm2java
 */
@Entity
@DynamicUpdate
@Table(name = "branches", uniqueConstraints = { @UniqueConstraint(columnNames = "Code"),
		@UniqueConstraint(columnNames = "name") })
public class Branches implements java.io.Serializable {

	private Integer id;
	private String name;
	private String address;
	private String code;
	private Byte performClosings;
	private Byte sendSms;
	private Byte published;
	private int nextVoucherNo;
	private Byte allowLogin;
	private Set stocknewMemberses = new HashSet(0);
	private Set stocknewTransactionsesForFromBranchId = new HashSet(0);
	private Set stockMemberses = new HashSet(0);
	private Set stockTransactionses = new HashSet(0);
	private Set stockContainerrowitemqties = new HashSet(0);
	private Set stocknewContainers = new HashSet(0);
	private Set moses = new HashSet(0);
	private Set xbankEmployeeses = new HashSet(0);
	private Set employeeSalaryRecords = new HashSet(0);
	private Set stocknewTransactionsesForToBranchId = new HashSet(0);
	private Set stockContainerses = new HashSet(0);
	private Set stockItemses = new HashSet(0);
	private Set stockCategorieses = new HashSet(0);
	private Set stockRowses = new HashSet(0);

	public Branches() {
	}

	public Branches(int nextVoucherNo) {
		this.nextVoucherNo = nextVoucherNo;
	}

	public Branches(String name, String address, String code, Byte performClosings, Byte sendSms, Byte published,
			int nextVoucherNo, Byte allowLogin, Set stocknewMemberses, Set stocknewTransactionsesForFromBranchId,
			Set stockMemberses, Set stockTransactionses, Set stockContainerrowitemqties, Set stocknewContainers,
			Set moses, Set xbankEmployeeses, Set employeeSalaryRecords, Set stocknewTransactionsesForToBranchId,
			Set stockContainerses, Set stockItemses, Set stockCategorieses, Set stockRowses) {
		this.name = name;
		this.address = address;
		this.code = code;
		this.performClosings = performClosings;
		this.sendSms = sendSms;
		this.published = published;
		this.nextVoucherNo = nextVoucherNo;
		this.allowLogin = allowLogin;
		this.stocknewMemberses = stocknewMemberses;
		this.stocknewTransactionsesForFromBranchId = stocknewTransactionsesForFromBranchId;
		this.stockMemberses = stockMemberses;
		this.stockTransactionses = stockTransactionses;
		this.stockContainerrowitemqties = stockContainerrowitemqties;
		this.stocknewContainers = stocknewContainers;
		this.moses = moses;
		this.xbankEmployeeses = xbankEmployeeses;
		this.employeeSalaryRecords = employeeSalaryRecords;
		this.stocknewTransactionsesForToBranchId = stocknewTransactionsesForToBranchId;
		this.stockContainerses = stockContainerses;
		this.stockItemses = stockItemses;
		this.stockCategorieses = stockCategorieses;
		this.stockRowses = stockRowses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", unique = true)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Address", length = 65535)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "Code", unique = true, length = 3)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "PerformClosings")
	public Byte getPerformClosings() {
		return this.performClosings;
	}

	public void setPerformClosings(Byte performClosings) {
		this.performClosings = performClosings;
	}

	@Column(name = "SendSMS")
	public Byte getSendSms() {
		return this.sendSms;
	}

	public void setSendSms(Byte sendSms) {
		this.sendSms = sendSms;
	}

	@Column(name = "published")
	public Byte getPublished() {
		return this.published;
	}

	public void setPublished(Byte published) {
		this.published = published;
	}

	@Column(name = "next_voucher_no", nullable = false)
	public int getNextVoucherNo() {
		return this.nextVoucherNo;
	}

	public void setNextVoucherNo(int nextVoucherNo) {
		this.nextVoucherNo = nextVoucherNo;
	}

	@Column(name = "allow_login")
	public Byte getAllowLogin() {
		return this.allowLogin;
	}

	public void setAllowLogin(Byte allowLogin) {
		this.allowLogin = allowLogin;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<StocknewMembers> getStocknewMemberses() {
		return this.stocknewMemberses;
	}

	public void setStocknewMemberses(Set stocknewMemberses) {
		this.stocknewMemberses = stocknewMemberses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branchesByFromBranchId")
	public Set<StocknewTransactions> getStocknewTransactionsesForFromBranchId() {
		return this.stocknewTransactionsesForFromBranchId;
	}

	public void setStocknewTransactionsesForFromBranchId(Set stocknewTransactionsesForFromBranchId) {
		this.stocknewTransactionsesForFromBranchId = stocknewTransactionsesForFromBranchId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<StockMembers> getStockMemberses() {
		return this.stockMemberses;
	}

	public void setStockMemberses(Set stockMemberses) {
		this.stockMemberses = stockMemberses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<StockTransactions> getStockTransactionses() {
		return this.stockTransactionses;
	}

	public void setStockTransactionses(Set stockTransactionses) {
		this.stockTransactionses = stockTransactionses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<StockContainerrowitemqty> getStockContainerrowitemqties() {
		return this.stockContainerrowitemqties;
	}

	public void setStockContainerrowitemqties(Set stockContainerrowitemqties) {
		this.stockContainerrowitemqties = stockContainerrowitemqties;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<StocknewContainer> getStocknewContainers() {
		return this.stocknewContainers;
	}

	public void setStocknewContainers(Set stocknewContainers) {
		this.stocknewContainers = stocknewContainers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<Mos> getMoses() {
		return this.moses;
	}

	public void setMoses(Set moses) {
		this.moses = moses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<XbankEmployees> getXbankEmployeeses() {
		return this.xbankEmployeeses;
	}

	public void setXbankEmployeeses(Set xbankEmployeeses) {
		this.xbankEmployeeses = xbankEmployeeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<EmployeeSalaryRecord> getEmployeeSalaryRecords() {
		return this.employeeSalaryRecords;
	}

	public void setEmployeeSalaryRecords(Set employeeSalaryRecords) {
		this.employeeSalaryRecords = employeeSalaryRecords;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branchesByToBranchId")
	public Set<StocknewTransactions> getStocknewTransactionsesForToBranchId() {
		return this.stocknewTransactionsesForToBranchId;
	}

	public void setStocknewTransactionsesForToBranchId(Set stocknewTransactionsesForToBranchId) {
		this.stocknewTransactionsesForToBranchId = stocknewTransactionsesForToBranchId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<StockContainers> getStockContainerses() {
		return this.stockContainerses;
	}

	public void setStockContainerses(Set stockContainerses) {
		this.stockContainerses = stockContainerses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<StockItems> getStockItemses() {
		return this.stockItemses;
	}

	public void setStockItemses(Set stockItemses) {
		this.stockItemses = stockItemses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<StockCategories> getStockCategorieses() {
		return this.stockCategorieses;
	}

	public void setStockCategorieses(Set stockCategorieses) {
		this.stockCategorieses = stockCategorieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "branches")
	public Set<StockRows> getStockRowses() {
		return this.stockRowses;
	}

	public void setStockRowses(Set stockRowses) {
		this.stockRowses = stockRowses;
	}

}
